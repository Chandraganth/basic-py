1.How many seconds are in an hour? Use the interactive interpreter as a calculator and multiply the number of seconds in a minute (60) by the number of minutes in an hour (also 60).
sol. 60 
                       
                     input:  60*60
                     output: 3600
                       
                       

2. Assign the result from the previous task (seconds in an hour) to a variable called seconds_per_hour.

seconds_per_hour = 3600
seconds_per_hour

output: 3600


3. How many seconds do you think there are in a day? Make use of the variables seconds per hour and minutes per hour.
                 
                 
seconds_per_hour = 3600
minutes_per_hour = 60
sec_perday = 24*seconds_per_hour
sec_perday

output:86400


4. Calculate seconds per day again, but this time save the result in a variable called seconds_per_day

                  seconds_per_day = 24*seconds_per_hour
                  seconds_per_day
                  
                  output: 86400
                  
5. Divide seconds_per_day by seconds_per_hour. Use floating-point (/) division.

                seconds_per_day/seconds_per_hour
                
                output: 24.0
                
6. Divide seconds_per_day by seconds_per_hour, using integer (//) division. Did this number agree with the floating-point value from the previous question, aside from the final .0?
                        
                        seconds_per_day//seconds_per_hour
                        
                        output:24              yes it agrees
                        
7. Write a generator, genPrimes, that returns the sequence of prime numbers on successive calls to its next() method: 2, 3, 5, 7, 11, ...

def genPrimes():
    n = 2
    prime = []
    while True:
        for i in prime:
            if n % p == 0:
                break
        else:
            prime.append(n)
            yield n
        n += 1
